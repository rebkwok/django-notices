[tool.poetry]
name = "django-one-time-notices"
version = "0.1.4"
description = ""
authors = ["Becky Smith <rebkwok@gmail.com>"]
readme = "README.md"
packages = [{include = "notices"}]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8"
Django = "^4.1"
django-classy-tags = "^3.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.3"
pytest-django = "^4.5.2"
black = "^22.10.0"
flake8 = "^5.0.4"
isort = "^5.10.1"
pytest-cov = "^4.0.0"
flake8-pyproject = "^1.1.0.post0"
pytest-env = "^0.6.2"


[tool.poetry.group.test.dependencies]
pytest-freezegun = "^0.4.2"

[tool.flake8]
extend-exclude = [".venv", "venv"]
extend-select = "W504"  # match black&PEP8 putting binary operators after new lines
ignore = [
    "E203",  # whitespace before : (black disagrees)
    "E501", # line too long (black fixes long lines, except for long strings which may benefit from being long (eg URLs))
    "W503",   # line break before binary operator (black disagrees)
]
max-line-length = 88

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "notices.example_project.example_project.settings"
testpaths = ["tests"]
python_files = "test_*.py"
env = [
    "SECRET_KEY=secret"
]

[tool.coverage.run]
branch = true
source = ["notices"]
omit = [
    "notices/example_project/example_project/asgi.py",
    "notices/example_project/example_project/wsgi.py",
    "notices/example_project/manage.py",
    "manage.py",
]

[tool.coverage.report]
show_missing = true
fail_under = 100

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
